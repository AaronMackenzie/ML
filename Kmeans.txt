import pandas as pd
import numpy as np
from copy import deepcopy

k=3

data=pd.DataFrame({"X1":[5.9, 4.6, 6.2, 4.7, 5.5, 5. , 4.9, 6.7, 5.1, 6.],"X2":[3.2, 2.9, 2.8, 3.2, 4.2, 3. , 3.1, 3.1, 3.8, 3. ]})

X=np.array(list(zip(data["X1"],data["X2"])))

# Initial centroids
centroids = np.array(list(zip([6.2, 6.6, 6.5], [3.2, 3.7, 3.0])))
iterr = 0

while True:
    iterr += 1
    # Assign each point to the nearest centroid
    distances = np.linalg.norm(X[:, np.newaxis, :] - centroids, axis=2)
    clusters = np.argmin(distances, axis=1)
    
    # Update centroids
    new_centroids = np.array([np.mean(X[clusters == p], axis=0) for p in range(k)])
    print("Old centroid:")
    print(centroids)
    print("New centroid after iteration", iterr)
    print(new_centroids)
    print("error",np.linalg.norm(new_centroids-centroids,axis=None))
        # Check convergence
    if np.array_equal(centroids, new_centroids):
        break
    centroids = deepcopy(new_centroids)
    print("Clusters:", clusters)
    print("\n\n")
